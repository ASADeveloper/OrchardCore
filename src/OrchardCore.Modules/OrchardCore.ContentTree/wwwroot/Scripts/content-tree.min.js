Vue.component("globalNotifications",{template:'        <div id="global-notifications" v-if="notifications.length > 0">                <div class="alert" :class="alertClass(n)" v-for="n in notifications">                    <span>{{ n.title }} : {{n.detail}}</span>                </div>        </div>        ',data:function(){return{notifications:[]}},created:function(){var n=this;bus.$on("ajaxErrorNotificaton",function(e){var t={isWarning:!0,title:"Error",detail:"There was an error when calling the server."};try{parsedResponse=JSON.parse(e.responseText),parsedResponse.title&&(t.title=parsedResponse.title),parsedResponse.detail&&(t.detail=parsedResponse.detail)}finally{n.notifications.push(t)}}),bus.$on("successNotificaton",function(e){e||(e={title:"OK",detail:"The operation completed successfully."}),e.isSuccess=!0,n.notifications.push(e)}),bus.$on("clearNotifications",function(){n.notifications=[]})},methods:{alertClass:function(e){return e?e.isWarning?"message-warning":e.isSuccess?"message-success":"message-information":"message-information"}}}),Vue.component("columnSorter",{template:'        <div v-show="isActive" style="display: inline-block; margin-left: 8px;">             <span v-show="asc"><i class="small fa fa-chevron-up"></i></span>             <span v-show="!asc"><i class="small fa fa-chevron-down"></i></span>         </div>         ',props:{colname:String,selectedcolname:String,asc:Boolean},computed:{isActive:function(){return""!=this.selectedcolname&&this.colname.toLowerCase()==this.selectedcolname.toLowerCase()}}}),Vue.component("contentStatusDisplay",{template:'        <span :title="status">            <i class="fa fa-circle mr-2 status-mark published" :class="{ exist : publishedExist }" ></i>            <i class="fa fa-circle mr-2 status-mark draft" :class="{ exist : draftExist }"></i>        </span>    ',props:{status:String},data:function(){return{contentStatusEnumValues:{}}},mounted:function(){this.contentStatusEnumValues=content_tree.ContentStatusEnumValues},computed:{statusText:function(){return this.contentStatusEnumValues[this.status]},publishedExist:function(){return"publishedwithdraft"==this.status.toLowerCase()||"publishedonly"==this.status.toLowerCase()},draftExist:function(){return"publishedwithdraft"==this.status.toLowerCase()||"draftonly"==this.status.toLowerCase()}}}),Vue.component("filterBox",{template:'        <nav class="nav filter-box ocf align-items-stretch form-inline ">            <div class="nav-item">                <div class="form-group mr-4 mb-2">                    <label for="contentStatusSelect" class="label mr-2">{{res.contentStatusLabelText}}</label>                    <select id="contentStatusSelect" class="form-control form-control-sm" v-model="selectedOptions.contentStatusSelectedOption">                        <option v-for="o in contentStatusFilterOptions" :value="o.value">{{o.text}}</option>                    </select>                </div>            </div>            <div class="nav-item form-inline">                <div class="form-check mr-4 mb-2">                    <input id="ownedByMeCheckbox" class="form-check-input" type="checkbox" :checked="selectedOptions.ownedByMe" v-model="selectedOptions.ownedByMe"/>                    <label for="ownedByMeCheckbox" class="form-check-label">{{res.ownedByMeLabelText}}</label>                </div>            </div>        </nav>    ',data:function(){return{res:{},contentStatusFilterOptions:[],selectedOptions:{contentStatusSelectedOption:{},ownedByMe:!0}}},mounted:function(){this.res=content_tree.res,this.contentStatusFilterOptions=content_tree.ContentStatusFilterOptions,this.selectedOptions.contentStatusSelectedOption=this.contentStatusFilterOptions[0].value,console.log(content_tree.ContentStatusFilterOptions)},watch:{"selectedOptions.contentStatusSelectedOption":function(){this.emitChangeInfo()},"selectedOptions.ownedByMe":function(){this.emitChangeInfo()}},methods:{emitChangeInfo:function(){bus.$emit("filterBoxChanged",$.param(this.selectedOptions))}}}),Vue.component("treeNode",{template:'        <li :class="{selected: isSelected}" >            <div :class="{treeroot: level == 1}">                <a href="javascript:;" :style="{ paddingLeft: padding + \'px\' }" v-on:click="select"  draggable="false" >                  <span v-on:click.stop="toggle" class="expand" :class="{opened: open, closed: !open, empty: empty}"><i class="fas fa-chevron-right"></i></span>                    {{model.title}}                </a>            </div>            <ol v-show="open">                <tree-node v-for="folder in children"                        :key="folder.path"                        :model="folder"                         :selected-in-media-app="selectedInMediaApp"                         :level="level + 1">                </tree-node>            </ol>        </li>        ',name:"treeNode",props:{model:Object,selectedInMediaApp:Object,level:Number},data:function(){return{open:!1,children:null,parent:null,isHovered:!1,padding:0}},computed:{empty:function(){return!this.children||0==this.children.length},isSelected:function(){return!1}},mounted:function(){this.padding=this.level<3?26:26+8*this.level},created:function(){},methods:{toggle:function(){console.log("toggling"),this.open=!this.open,this.open&&!this.children&&this.loadChildren()},select:function(){this.loadChildren(),bus.$emit("currentNodeChanged",this.model)},loadChildren:function(){var t=this;t.model.isLeaf||(0==this.open&&(this.open=!0),$.ajax({url:content_tree.GetChildrenUrl+"?parentId="+encodeURIComponent(t.model.id)+"&parentType="+encodeURIComponent(t.model.type),method:"GET",success:function(e){t.children=e},error:function(e){emtpy=!1,console.error(e.responseText)}}))}}});var bus=new Vue,contentTreeApp=new Vue({el:"#content-tree",data:{res:{},sortDirections:{},providers:[],contentItems:[],currentNode:{},filterBoxParams:"",sortBy:"",sortAsc:!1,queryUrl:"",returnUrl:"",noResults:!1,errors:[]},created:function(){var t=this;bus.$on("currentNodeChanged",function(e){console.log("currentNodeChanged"),console.log(e),e&&(t.currentNode=e).url&&(t.queryUrl=e.url)}),bus.$on("leafUrlChanged",function(e){t.queryUrl=e}),bus.$on("filterBoxChanged",function(e){t.filterBoxParams=e})},mounted:function(){this.res=content_tree.res,this.sortDirections=content_tree.SortDirections,this.returnUrl=content_tree.returnUrl,this.loadProviders()},computed:{currentQuery:function(){var e=this.sortAsc?this.sortDirections.asc:this.sortDirections.desc;return this.queryUrl+"&"+this.filterBoxParams+"&sortBy="+this.sortBy+"&sortDir="+e+"&returnUrl="+this.returnUrl}},watch:{currentQuery:function(){this.queryContentItems()}},methods:{loadProviders:function(){var t=this,e=content_tree.GetTreeNodeProvidersUrl;$.ajax({url:e,method:"GET",success:function(e){t.providers=e},error:function(e){console.log("error getting providers")}})},queryContentItems:function(){var t=this;t.noResults=!1,bus.$emit("clearNotifications"),""!==t.queryUrl&&$.ajax({url:t.currentQuery,method:"GET",success:function(e){console.log("new content items are:"),console.log(e),t.contentItems=e,t.noResults=e.length<1},error:function(e){emtpy=!1,t.contentItems=[],bus.$emit("ajaxErrorNotificaton",e)}})},changeSort:function(e){this.sortBy===e?this.sortAsc=!this.sortAsc:(this.sortAsc=!0,this.sortBy=e)}}});
